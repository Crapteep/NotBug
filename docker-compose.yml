services:
  db:
    image: postgres:12
    restart: always
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    ports:
      - 8080:8080

  todolist:
    build:
      context: ./todo-flask
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    platform: linux/amd64
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    networks:
      - default
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
    ports:
      - "5000:5000"
    entrypoint: ["bash", "-c", "/app/prestart.sh && poetry run hypercorn app.main:app -c hypercorn_config.py"]

  pokemons:
    build:
      context: ./pokemons-angular
    ports:
      - "4500:4500"
    restart: always
    environment:
      - NODE_ENV=production

  blog-django:
    build:
      context: ./blog-django
    ports:
      - "8000:8000"
    restart: always
  
  cars:
    build:
      context: ./cars-angular
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NODE_ENV=production

volumes:
  app-db-data:
